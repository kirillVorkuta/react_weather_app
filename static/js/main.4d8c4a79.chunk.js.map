{"version":3,"sources":["modules/CityComponent.js","modules/WeatherInfoComponent.js","App.js","index.js"],"names":["SearchBox","styled","form","_templateObject","_taggedTemplateLiteral","ChooseCityLabel","span","_templateObject2","WelcomeWeatherLogo","img","_templateObject3","CityComponent","props","updateCity","fetchWeather","_jsxs","_Fragment","children","_jsx","src","onSubmit","onChange","e","target","value","placeholder","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","Location","Condition","WeatherInfoLabel","WeatherIcon","_templateObject4","WeatherContainer","div","_templateObject5","WeatherInfoContainer","_templateObject6","InfoContainer","_templateObject7","InfoIcon","_templateObject8","InfoLabel","_templateObject9","WeatherInfoComponent","name","WeatherComponent","_weather$weather$0$ic","_weather$main","_weather$sys","_weather$main2","_weather$wind","_weather$main3","weather","isDay","icon","includes","concat","Math","floor","main","temp","description","WeatherIcons","sys","country","timeStamp","Date","getHours","getMinutes","speed","Container","AppLabel","App","city","useState","updateWeather","async","preventDefault","response","Axios","get","data","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d8c4a79.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React from \"react\";\n\nconst SearchBox = styled.form`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  margin: 20px;\n  border: black solid 1px;\n  border-radius: 2px;\n\n  & input {\n    padding: 10px;\n    font-size: 14px;\n    border: none;\n    outline: none;\n    font-family: Montserrat;\n    font-weight: bold;\n  }\n  & button {\n    background-color: black;\n    font-size: 14px;\n    padding: 0 10px;\n    color: white;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    font-family: Montserrat;\n    font-weight: bold;\n  }\n`;\nconst ChooseCityLabel = styled.span`\n  color: black;\n  margin: 10px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst WelcomeWeatherLogo = styled.img`\n  width: 140px;\n  height: 140px;\n  margin: 40px auto;\n`;\nconst CityComponent = (props) => {\n  const { updateCity, fetchWeather } = props;\n  return (\n    <>\n      <WelcomeWeatherLogo src={\"/react-weather-app/icons/perfect-day.svg\"} />\n      <ChooseCityLabel>Find Weather of your city</ChooseCityLabel>\n      <SearchBox onSubmit={fetchWeather}>\n        <input\n          onChange={(e) => updateCity(e.target.value)}\n          placeholder=\"City\"\n        />\n        <button type={\"submit\"}>Search</button>\n      </SearchBox>\n    </>\n  );\n};\nexport default CityComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {WeatherIcons} from \"../App\";\n\nexport const WeatherInfoIcons = {\n    sunset: \"/react-weather-app/icons/temp.svg\",\n    sunrise: \"/react-weather-app/icons/temp.svg\",\n    humidity: \"/react-weather-app/icons/humidity.svg\",\n    wind: \"/react-weather-app/icons/wind.svg\",\n    pressure: \"/react-weather-app/icons/pressure.svg\",\n};\nconst Location = styled.span`\n  margin: 15px auto;\n  text-transform: capitalize;\n  font-size: 28px;\n  font-weight: bold;\n`;\nconst Condition = styled.span`\n  margin: 20px auto;\n  text-transform: capitalize;\n  font-size: 14px;\n  & span {\n    font-size: 28px;\n  }\n`;\nconst WeatherInfoLabel = styled.span`\n  margin: 20px 25px 10px;\n  text-transform: capitalize;\n  text-align: start;\n  width: 90%;\n  font-weight: bold;\n  font-size: 14px;\n`;\nconst WeatherIcon = styled.img`\n  width: 100px;\n  height: 100px;\n  margin: 5px auto;\n`;\nconst WeatherContainer = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 30px auto;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst WeatherInfoContainer = styled.div`\n  display: flex;\n  width: 90%;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst InfoContainer = styled.div`\n  display: flex;\n  margin: 5px 10px;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst InfoIcon = styled.img`\n  width: 36px;\n  height: 36px;\n`;\nconst InfoLabel = styled.span`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  margin: 15px;\n  & span {\n    font-size: 12px;\n    text-transform: capitalize;\n  }\n`;\n\nconst WeatherInfoComponent = (props) => {\n    const {name, value} = props;\n    return (\n        <InfoContainer>\n            <InfoIcon src={WeatherInfoIcons[name]}/>\n            <InfoLabel>\n                {value}\n                <span>{name}</span>\n            </InfoLabel>\n        </InfoContainer>\n    );\n};\nconst WeatherComponent = (props) => {\n    const {weather} = props;\n    const isDay = weather?.weather[0].icon?.includes('d')\n    const getTime = (timeStamp) => {\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\n    }\n    return (\n        <>\n            <WeatherContainer>\n                <Condition>\n                    <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\n                    {`  |  ${weather?.weather[0].description}`}\n                </Condition>\n                <WeatherIcon src={WeatherIcons[weather?.weather[0].icon]}/>\n            </WeatherContainer>\n            <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\n\n            <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\n            <WeatherInfoContainer>\n                <WeatherInfoComponent name={isDay ? \"sunset\" : \"sunrise\"}\n                                      value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`}/>\n                <WeatherInfoComponent name={\"humidity\"} value={weather?.main?.humidity}/>\n                <WeatherInfoComponent name={\"wind\"} value={weather?.wind?.speed}/>\n                <WeatherInfoComponent name={\"pressure\"} value={weather?.main?.pressure}/>\n            </WeatherInfoContainer>\n        </>\n    );\n};\n\nexport default WeatherComponent;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./modules/CityComponent\";\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\n\nexport const WeatherIcons = {\n  \"01d\": \"/react-weather-app/icons/sunny.svg\",\n  \"01n\": \"/react-weather-app/icons/night.svg\",\n  \"02d\": \"/react-weather-app/icons/day.svg\",\n  \"02n\": \"/react-weather-app/icons/cloudy-night.svg\",\n  \"03d\": \"/react-weather-app/icons/cloudy.svg\",\n  \"03n\": \"/react-weather-app/icons/cloudy.svg\",\n  \"04d\": \"/react-weather-app/icons/perfect-day.svg\",\n  \"04n\": \"/react-weather-app/icons/cloudy-night.svg\",\n  \"09d\": \"/react-weather-app/icons/rain.svg\",\n  \"09n\": \"/react-weather-app/icons/rain-night.svg\",\n  \"10d\": \"/react-weather-app/icons/rain.svg\",\n  \"10n\": \"/react-weather-app/icons/rain-night.svg\",\n  \"11d\": \"/react-weather-app/icons/storm.svg\",\n  \"11n\": \"/react-weather-app/icons/storm.svg\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  font-family: Montserrat;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst CloseButton = styled.span`\n  padding: 2px 3px;\n  background-color: black;\n  border-radius: 50%;\n  color: white;\n  position: absolute;\n`;\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe4feefa8543e06d4f3c66d92c61b69c`,\n    );\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel>React Weather App</AppLabel>\n      {city && weather ? (\n        <WeatherComponent weather={weather} city={city} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}